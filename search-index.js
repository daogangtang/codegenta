var searchIndex = {};
searchIndex['codegenta'] = {"items":[[0,"","codegenta","",null,null],[11,"meta_code","rustorm::table","",0,null],[11,"meta_code","","",1,null],[11,"meta_code","","build a source code which express it self as a table object\nwhich is a meta definition of the struct itself",2,null],[11,"struct_code","","build a source code for the struct defined by this table\n(imports, imported_tables, source code)",2,null],[11,"write_column","","",2,{"inputs":[{"name":"table"},{"name":"writer"},{"name":"column"}],"output":null}],[0,"generator","codegenta","",null,null],[3,"Config","codegenta::generator","configuration for generating code",null,null],[12,"base_module","","the module name to be used when it is possible to unify all tables in 1 module\nlikely the project name",3,null],[12,"include_table_references","","include the has_one, has_many, extension Models",3,null],[12,"use_condensed_name","","use the condense name of the has_many else, use the table name referred",3,null],[12,"generate_table_meta","","generate the is table definition for each table",3,null],[12,"base_dir","","base directory for the generated content",3,null],[5,"get_all_tables","","",null,{"inputs":[{"name":"databasedev"}],"output":{"name":"vec"}}],[5,"get_schemas","","get the database schema",null,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[5,"get_tables_in_schema","","get all tables with schema name",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"vec"}}],[5,"generate_all","","this is the default config generation",null,{"inputs":[{"name":"databasedev"},{"name":"config"}],"output":null}],[5,"generate_tables","","if only_tables is empty vec, then generate_all",null,{"inputs":[{"name":"databasedev"},{"name":"vec"},{"name":"config"}],"output":null}],[11,"default","","",3,{"inputs":[{"name":"config"}],"output":{"name":"self"}}]],"paths":[[3,"Foreign"],[3,"Column"],[3,"Table"],[3,"Config"]]};
initSearch(searchIndex);
